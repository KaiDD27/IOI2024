#include <algorithm>
#include <iostream>
#include <vector>
using namespace std;
using ll = long long;
#define endl "\n"
vector<ll> machines;
int n, a;
ll intersect(ll curr, ll prev) {
  ll len = prev + a + 1 - max(0LL, curr - a);
  if (len > 0)
    return len * len;
  else
    return 0;
}

ll area(ll r) {
  ll len = r + a + 1 - max(0LL, r - a);
  return len * len;
}

int main() {
  cin >> n >> a;
  machines.resize(n);
  for (int i = 0; i < n; ++i) {
    ll r, c;
    cin >> r >> c;
    machines[i] = r;
  }
  sort(machines.begin(), machines.end());
  ll res = 0;
  for (int i = 0; i < n; ++i) {
    res += area(machines[i]);
    if (i > 0) {
      res -= intersect(machines[i], machines[i - 1]);
    }
  }
  cout << res << endl;
  return 0;
}